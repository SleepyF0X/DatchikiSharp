// <auto-generated />
using System;
using DatchikiSharp.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatchikiSharp.Core.Migrations
{
    [DbContext(typeof(ScanerContext))]
    [Migration("20210530063102_sd")]
    partial class sd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("DatchikiSharp.Core.Entitites.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasColumnType("longtext");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DatchikiSharp.Core.Entitites.Scaner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activity")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Scaners");
                });

            modelBuilder.Entity("DatchikiSharp.Core.Events.RoomEvent", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RoomId1")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("RoomId");

                    b.HasIndex("RoomId1");

                    b.ToTable("RoomEvents");
                });

            modelBuilder.Entity("DatchikiSharp.Core.Events.ScanerJsonEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ScanerId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ScanerId");

                    b.ToTable("ScanerEvents");
                });

            modelBuilder.Entity("DatchikiSharp.Core.Entitites.Scaner", b =>
                {
                    b.HasOne("DatchikiSharp.Core.Entitites.Room", "Room")
                        .WithMany("Scaners")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DatchikiSharp.Core.Events.RoomEvent", b =>
                {
                    b.HasOne("DatchikiSharp.Core.Entitites.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DatchikiSharp.Core.Events.ScanerJsonEvent", b =>
                {
                    b.HasOne("DatchikiSharp.Core.Entitites.Scaner", "Scaner")
                        .WithMany("ScanerJsonEvent")
                        .HasForeignKey("ScanerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scaner");
                });

            modelBuilder.Entity("DatchikiSharp.Core.Entitites.Room", b =>
                {
                    b.Navigation("Scaners");
                });

            modelBuilder.Entity("DatchikiSharp.Core.Entitites.Scaner", b =>
                {
                    b.Navigation("ScanerJsonEvent");
                });
#pragma warning restore 612, 618
        }
    }
}
